// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using UserDashboard.Models;

namespace UserDashboard.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("UserDashboard.Models.Comment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createdAt");

                    b.Property<int?>("postid");

                    b.Property<string>("text");

                    b.Property<DateTime>("updatedAt");

                    b.Property<int?>("userid");

                    b.HasKey("id");

                    b.HasIndex("postid");

                    b.HasIndex("userid");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("UserDashboard.Models.Post", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("text");

                    b.Property<DateTime>("updatedAt");

                    b.Property<int?>("userid");

                    b.HasKey("id");

                    b.HasIndex("userid");

                    b.ToTable("posts");
                });

            modelBuilder.Entity("UserDashboard.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("admin");

                    b.Property<DateTime>("createdAt");

                    b.Property<string>("email");

                    b.Property<string>("first");

                    b.Property<string>("last");

                    b.Property<string>("password");

                    b.Property<DateTime>("updatedAt");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("UserDashboard.Models.Comment", b =>
                {
                    b.HasOne("UserDashboard.Models.Post", "post")
                        .WithMany("comments")
                        .HasForeignKey("postid");

                    b.HasOne("UserDashboard.Models.User", "user")
                        .WithMany("comments")
                        .HasForeignKey("userid");
                });

            modelBuilder.Entity("UserDashboard.Models.Post", b =>
                {
                    b.HasOne("UserDashboard.Models.User", "user")
                        .WithMany("posts")
                        .HasForeignKey("userid");
                });
#pragma warning restore 612, 618
        }
    }
}
